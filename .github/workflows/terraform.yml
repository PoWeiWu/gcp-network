name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

    #  Execution and save plan to json file
      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: |
          terraform plan --out tfplan.binary
          terraform show -json tfplan.binary > tfplan.json
        env:
            TF_VAR_credentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    # # Install the lastest conftest for policy check
      - name: Setup Conftest
        run: |
          wget https://github.com/open-policy-agent/conftest/releases/download/v0.25.0/conftest_0.25.0_Linux_x86_64.tar.gz
          tar xzf conftest_0.25.0_Linux_x86_64.tar.gz
          sudo mv conftest /usr/local/bin
          source ~/.bashrc
          conftest -v
    
      - name: Conftest policy check
        id: conftest
        run: conftest test tfplan.json -p policy/ --all-namespaces -o table --no-color > policyCheckResult
        continue-on-error: true

      # - name: Get Policy check result
      #   id: result
      #   run: |
      #     echo "::set-output name=policy_check_result::$(cat policyCheckResult)"
  

      # - name: Policy check result if pass
      #   run: ./policy-check.sh

      - name: Output to PR
        uses: actions/github-script@v5
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            #### Conftest test result
            <details><summary>Policy Check result</summary>

            \`\`\`${{ env.policy_check_result }}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
      
      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        env:
            TF_VAR_credentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
